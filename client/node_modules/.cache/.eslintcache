[{"/Users/navneetkumar/Desktop/blog full stack/client/src/index.js":"1","/Users/navneetkumar/Desktop/blog full stack/client/src/App.js":"2","/Users/navneetkumar/Desktop/blog full stack/client/src/components/Posts/Posts.js":"3","/Users/navneetkumar/Desktop/blog full stack/client/src/components/Form/Form.js":"4","/Users/navneetkumar/Desktop/blog full stack/client/src/components/Posts/Post/Post.js":"5","/Users/navneetkumar/Desktop/blog full stack/client/src/styles.js":"6","/Users/navneetkumar/Desktop/blog full stack/client/src/components/Form/styles.js":"7","/Users/navneetkumar/Desktop/blog full stack/client/src/components/Posts/Post/styles.js":"8","/Users/navneetkumar/Desktop/blog full stack/client/src/components/Posts/styles.js":"9","/Users/navneetkumar/Desktop/blog full stack/client/src/reducers/index.js":"10","/Users/navneetkumar/Desktop/blog full stack/client/src/reducers/posts.js":"11","/Users/navneetkumar/Desktop/blog full stack/client/src/actions/posts.js":"12","/Users/navneetkumar/Desktop/blog full stack/client/src/api/index.js":"13","/Users/navneetkumar/Desktop/blog full stack/client/src/middleware/reduxLogger.js":"14","/Users/navneetkumar/Desktop/blog full stack/client/src/constants/actionTypes.js":"15","/Users/navneetkumar/Desktop/blog full stack/client/src/store.js":"16","/Users/navneetkumar/Desktop/blog full stack/client/src/components/Navbar/Navbar.js":"17","/Users/navneetkumar/Desktop/blog full stack/client/src/components/Navbar/styles.js":"18","/Users/navneetkumar/Desktop/blog full stack/client/src/components/Home/Home.js":"19","/Users/navneetkumar/Desktop/blog full stack/client/src/components/Home/styles.js":"20","/Users/navneetkumar/Desktop/blog full stack/client/src/components/Auth/Auth.js":"21","/Users/navneetkumar/Desktop/blog full stack/client/src/components/Auth/styles.js":"22","/Users/navneetkumar/Desktop/blog full stack/client/src/components/Auth/Input.js":"23","/Users/navneetkumar/Desktop/blog full stack/client/src/components/Auth/Icon.js":"24","/Users/navneetkumar/Desktop/blog full stack/client/src/reducers/auth.js":"25","/Users/navneetkumar/Desktop/Full_stack_blog-MERN/client/src/index.js":"26","/Users/navneetkumar/Desktop/Full_stack_blog-MERN/client/src/App.js":"27","/Users/navneetkumar/Desktop/Full_stack_blog-MERN/client/src/store.js":"28","/Users/navneetkumar/Desktop/Full_stack_blog-MERN/client/src/styles.js":"29","/Users/navneetkumar/Desktop/Full_stack_blog-MERN/client/src/middleware/reduxLogger.js":"30","/Users/navneetkumar/Desktop/Full_stack_blog-MERN/client/src/components/Auth/Auth.js":"31","/Users/navneetkumar/Desktop/Full_stack_blog-MERN/client/src/components/Navbar/Navbar.js":"32","/Users/navneetkumar/Desktop/Full_stack_blog-MERN/client/src/components/Home/Home.js":"33","/Users/navneetkumar/Desktop/Full_stack_blog-MERN/client/src/reducers/index.js":"34","/Users/navneetkumar/Desktop/Full_stack_blog-MERN/client/src/components/Auth/Icon.js":"35","/Users/navneetkumar/Desktop/Full_stack_blog-MERN/client/src/components/Auth/Input.js":"36","/Users/navneetkumar/Desktop/Full_stack_blog-MERN/client/src/components/Auth/styles.js":"37","/Users/navneetkumar/Desktop/Full_stack_blog-MERN/client/src/components/Home/styles.js":"38","/Users/navneetkumar/Desktop/Full_stack_blog-MERN/client/src/components/Navbar/styles.js":"39","/Users/navneetkumar/Desktop/Full_stack_blog-MERN/client/src/components/Posts/Posts.js":"40","/Users/navneetkumar/Desktop/Full_stack_blog-MERN/client/src/actions/posts.js":"41","/Users/navneetkumar/Desktop/Full_stack_blog-MERN/client/src/components/Form/Form.js":"42","/Users/navneetkumar/Desktop/Full_stack_blog-MERN/client/src/reducers/posts.js":"43","/Users/navneetkumar/Desktop/Full_stack_blog-MERN/client/src/reducers/auth.js":"44","/Users/navneetkumar/Desktop/Full_stack_blog-MERN/client/src/components/Form/styles.js":"45","/Users/navneetkumar/Desktop/Full_stack_blog-MERN/client/src/constants/actionTypes.js":"46","/Users/navneetkumar/Desktop/Full_stack_blog-MERN/client/src/api/index.js":"47","/Users/navneetkumar/Desktop/Full_stack_blog-MERN/client/src/components/Posts/styles.js":"48","/Users/navneetkumar/Desktop/Full_stack_blog-MERN/client/src/components/Posts/Post/Post.js":"49","/Users/navneetkumar/Desktop/Full_stack_blog-MERN/client/src/components/Posts/Post/styles.js":"50","/Users/navneetkumar/Desktop/Full_stack_blog-MERN/client/src/actions/auth.js":"51","/Users/navneetkumar/Desktop/Full_stack_blog-MERN/client/src/components/Pagination.jsx":"52","/Users/navneetkumar/Desktop/Full_stack_blog-MERN/client/src/components/styles.js":"53","/Users/navneetkumar/Desktop/Full_stack_blog-MERN/client/src/components/PostDetails/PostDetails.jsx":"54","/Users/navneetkumar/Desktop/Full_stack_blog-MERN/client/src/components/PostDetails/styles.js":"55","/Users/navneetkumar/Desktop/Full_stack_blog-MERN/client/src/components/PostDetails/CommentSection.jsx":"56"},{"size":286,"mtime":1638644699798,"results":"57","hashOfConfig":"58"},{"size":734,"mtime":1639257906073,"results":"59","hashOfConfig":"58"},{"size":1186,"mtime":1639264853761,"results":"60","hashOfConfig":"58"},{"size":3739,"mtime":1639298978854,"results":"61","hashOfConfig":"58"},{"size":2678,"mtime":1639286711373,"results":"62","hashOfConfig":"58"},{"size":465,"mtime":1639023533945,"results":"63","hashOfConfig":"58"},{"size":495,"mtime":1639298620177,"results":"64","hashOfConfig":"58"},{"size":963,"mtime":1638564296876,"results":"65","hashOfConfig":"58"},{"size":266,"mtime":1638564217543,"results":"66","hashOfConfig":"58"},{"size":152,"mtime":1639155171415,"results":"67","hashOfConfig":"58"},{"size":635,"mtime":1638718407769,"results":"68","hashOfConfig":"58"},{"size":1187,"mtime":1638717817475,"results":"69","hashOfConfig":"58"},{"size":493,"mtime":1638735858802,"results":"70","hashOfConfig":"58"},{"size":280,"mtime":1638208063496,"results":"71","hashOfConfig":"58"},{"size":222,"mtime":1639154663713,"results":"72","hashOfConfig":"58"},{"size":559,"mtime":1639265060245,"results":"73","hashOfConfig":"58"},{"size":1556,"mtime":1639065111281,"results":"74","hashOfConfig":"58"},{"size":911,"mtime":1639019996589,"results":"75","hashOfConfig":"58"},{"size":1064,"mtime":1639264186587,"results":"76","hashOfConfig":"58"},{"size":465,"mtime":1639023548007,"results":"77","hashOfConfig":"58"},{"size":4202,"mtime":1639297557917,"results":"78","hashOfConfig":"58"},{"size":638,"mtime":1639066955563,"results":"79","hashOfConfig":"58"},{"size":1071,"mtime":1639151461541,"results":"80","hashOfConfig":"58"},{"size":502,"mtime":1639083847988,"results":"81","hashOfConfig":"58"},{"size":299,"mtime":1639155108914,"results":"82","hashOfConfig":"58"},{"size":286,"mtime":1638644699798,"results":"83","hashOfConfig":"84"},{"size":1113,"mtime":1642263766045,"results":"85","hashOfConfig":"84"},{"size":556,"mtime":1639810877176,"results":"86","hashOfConfig":"84"},{"size":465,"mtime":1639023533945,"results":"87","hashOfConfig":"84"},{"size":280,"mtime":1639812165962,"results":"88","hashOfConfig":"84"},{"size":4737,"mtime":1640373731671,"results":"89","hashOfConfig":"84"},{"size":2427,"mtime":1640372663140,"results":"90","hashOfConfig":"84"},{"size":3353,"mtime":1640515599163,"results":"91","hashOfConfig":"84"},{"size":152,"mtime":1639155171415,"results":"92","hashOfConfig":"84"},{"size":502,"mtime":1639083847988,"results":"93","hashOfConfig":"84"},{"size":1071,"mtime":1639151461541,"results":"94","hashOfConfig":"84"},{"size":638,"mtime":1639066955563,"results":"95","hashOfConfig":"84"},{"size":938,"mtime":1640243841584,"results":"96","hashOfConfig":"84"},{"size":911,"mtime":1639019996589,"results":"97","hashOfConfig":"84"},{"size":901,"mtime":1642262090564,"results":"98","hashOfConfig":"84"},{"size":2594,"mtime":1640510386382,"results":"99","hashOfConfig":"84"},{"size":3807,"mtime":1640514824228,"results":"100","hashOfConfig":"84"},{"size":1569,"mtime":1640462618302,"results":"101","hashOfConfig":"84"},{"size":494,"mtime":1639508600215,"results":"102","hashOfConfig":"84"},{"size":495,"mtime":1639298620177,"results":"103","hashOfConfig":"84"},{"size":434,"mtime":1640461863430,"results":"104","hashOfConfig":"84"},{"size":1336,"mtime":1640460115266,"results":"105","hashOfConfig":"84"},{"size":266,"mtime":1638564217543,"results":"106","hashOfConfig":"84"},{"size":4311,"mtime":1642262143344,"results":"107","hashOfConfig":"84"},{"size":963,"mtime":1638564296876,"results":"108","hashOfConfig":"84"},{"size":584,"mtime":1639627225514,"results":"109","hashOfConfig":"84"},{"size":855,"mtime":1640373647772,"results":"110","hashOfConfig":"84"},{"size":144,"mtime":1640026810587,"results":"111","hashOfConfig":"84"},{"size":4209,"mtime":1640456047643,"results":"112","hashOfConfig":"84"},{"size":1039,"mtime":1640458027642,"results":"113","hashOfConfig":"84"},{"size":1967,"mtime":1640512304828,"results":"114","hashOfConfig":"84"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},"1wzenay",{"filePath":"118","messages":"119","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"117"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"125","messages":"126","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"129","messages":"130","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"117"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"117"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"117"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"117"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"170","usedDeprecatedRules":"117"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"173"},"v0upjj",{"filePath":"174","messages":"175","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"176","messages":"177","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"178","usedDeprecatedRules":"173"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"173"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"173"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185","usedDeprecatedRules":"173"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188","usedDeprecatedRules":"173"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191","usedDeprecatedRules":"173"},{"filePath":"192","messages":"193","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"173"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"173"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"173"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"173"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"173"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"173"},{"filePath":"204","messages":"205","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"173"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"210","usedDeprecatedRules":"173"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"213","usedDeprecatedRules":"173"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"173"},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"173"},{"filePath":"218","messages":"219","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"173"},{"filePath":"220","messages":"221","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"222","usedDeprecatedRules":"173"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"173"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"227"},{"filePath":"228","messages":"229","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"173"},{"filePath":"230","messages":"231","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"173"},{"filePath":"232","messages":"233","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"173"},{"filePath":"234","messages":"235","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"173"},{"filePath":"236","messages":"237","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"238","usedDeprecatedRules":"173"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"173"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"243","usedDeprecatedRules":"173"},"/Users/navneetkumar/Desktop/blog full stack/client/src/index.js",[],["244","245"],"/Users/navneetkumar/Desktop/blog full stack/client/src/App.js",["246"],"import React from \"react\";\nimport { Container } from \"@material-ui/core\";\nimport useStyles from \"./styles\";\nimport Navbar from \"./components/Navbar/Navbar\";\nimport { BrowserRouter, Routes, Route } from \"react-router-dom\";\nimport Home from \"./components/Home/Home\";\nimport Auth from \"./components/Auth/Auth\";\nimport Chu from \"./Chu\";\n\nconst App = () => {\n  return (\n    <BrowserRouter>\n      <Container maxWidth=\"lg\">\n        <Navbar />\n        <div>\n          <Routes>\n            <Route exact path=\"/\" element={<Home />} />\n            <Route path=\"/Auth\" element={<Auth />} />\n            <Route path=\"/Chu\" element={<Chu />} />\n          </Routes>\n        </div>\n      </Container>\n    </BrowserRouter>\n  );\n};\nexport default App;\n","/Users/navneetkumar/Desktop/blog full stack/client/src/components/Posts/Posts.js",[],"/Users/navneetkumar/Desktop/blog full stack/client/src/components/Form/Form.js",[],"/Users/navneetkumar/Desktop/blog full stack/client/src/components/Posts/Post/Post.js",[],"/Users/navneetkumar/Desktop/blog full stack/client/src/styles.js",[],"/Users/navneetkumar/Desktop/blog full stack/client/src/components/Form/styles.js",[],"/Users/navneetkumar/Desktop/blog full stack/client/src/components/Posts/Post/styles.js",[],"/Users/navneetkumar/Desktop/blog full stack/client/src/components/Posts/styles.js",[],"/Users/navneetkumar/Desktop/blog full stack/client/src/reducers/index.js",[],"/Users/navneetkumar/Desktop/blog full stack/client/src/reducers/posts.js",["247"],"import {\n  FETCH_ALL,\n  CREATE,\n  UPDATE,\n  DELETE,\n  LIKE,\n} from \"../constants/actionTypes\";\nexport default (posts = [], action) => {\n  switch (action.type) {\n    case DELETE:\n      return posts.filter((post) => post._id !== action.payload);\n    case UPDATE:\n      return posts.map((post) =>\n        post._id === action.payload._id ? action.payload : post\n      );\n    case LIKE:\n      return posts.map((post) =>\n        post._id === action.payload._id ? action.payload : post\n      );\n    case FETCH_ALL:\n      return action.payload;\n    case CREATE:\n      return [...posts, action.payload];\n    default:\n      return posts;\n  }\n};\n","/Users/navneetkumar/Desktop/blog full stack/client/src/actions/posts.js",[],"/Users/navneetkumar/Desktop/blog full stack/client/src/api/index.js",["248"],"import axios from \"axios\";\nexport const url = \"http://localhost:1000/posts\";\nexport const fetchPosts = () => axios.get(url);\nconst config = {\n  headers: {\n    \"Content-Type\": \"application/json\",\n  },\n};\nexport const createPost = (newPost) => axios.post(url, newPost);\nexport const updatePost = (id, updatedPost) =>\n  axios.patch(`${url}/${id}`, updatedPost);\nexport const deletePost = (id) => axios.delete(`${url}/${id}`);\nexport const likePost = (id) => axios.patch(`${url}/${id}/likePost`);\n","/Users/navneetkumar/Desktop/blog full stack/client/src/middleware/reduxLogger.js",[],"/Users/navneetkumar/Desktop/blog full stack/client/src/constants/actionTypes.js",[],"/Users/navneetkumar/Desktop/blog full stack/client/src/store.js",[],"/Users/navneetkumar/Desktop/blog full stack/client/src/components/Navbar/Navbar.js",[],"/Users/navneetkumar/Desktop/blog full stack/client/src/components/Navbar/styles.js",[],"/Users/navneetkumar/Desktop/blog full stack/client/src/components/Home/Home.js",["249"],"import React, { useEffect, useState } from \"react\";\nimport { getPosts } from \"../../actions/posts\";\nimport useStyles from \"./styles\";\nimport { Container, Typography, Grid, Grow } from \"@material-ui/core\";\nimport Posts from \"../Posts/Posts\";\nimport Form from \"../Form/Form\";\nimport { useDispatch } from \"react-redux\";\nconst Home = () => {\n  const [currentId, setCurrentId] = useState(null);\n  const dispatch = useDispatch();\n  const classes = useStyles();\n\n  useEffect(() => {\n    dispatch(getPosts());\n  }, [currentId, dispatch]);\n  return (\n    <Grow in>\n      <Container>\n        <Grid\n          className={classes.mainContainer}\n          container\n          justifyContent=\"space-between\"\n          alignItems=\"stretch\"\n          spacing={3}\n        >\n          <Grid item xs={12} sm={7}>\n            <Posts setCurrentId={setCurrentId} />\n          </Grid>\n          <Grid item xs={12} sm={4}>\n            <Form currentId={currentId} setCurrentId={setCurrentId} />\n          </Grid>\n        </Grid>\n      </Container>\n    </Grow>\n  );\n};\n\nexport default Home;\n","/Users/navneetkumar/Desktop/blog full stack/client/src/components/Home/styles.js",[],"/Users/navneetkumar/Desktop/blog full stack/client/src/components/Auth/Auth.js",["250","251","252","253"],"/Users/navneetkumar/Desktop/blog full stack/client/src/components/Auth/styles.js",[],"/Users/navneetkumar/Desktop/blog full stack/client/src/components/Auth/Input.js",[],"/Users/navneetkumar/Desktop/blog full stack/client/src/components/Auth/Icon.js",[],"/Users/navneetkumar/Desktop/blog full stack/client/src/reducers/auth.js",["254"],"import { AUTH, LOGOUT } from \"../constants/actionTypes\";\n\nconst authReducer = (state = { authData: null }, action) => {\n  switch (action.type) {\n    case AUTH:\n      console.log(\"action in auth\", action?.data);\n      return state;\n    default:\n      return state;\n  }\n};\nexport default authReducer;\n","/Users/navneetkumar/Desktop/Full_stack_blog-MERN/client/src/index.js",[],["255","256"],"/Users/navneetkumar/Desktop/Full_stack_blog-MERN/client/src/App.js",[],"/Users/navneetkumar/Desktop/Full_stack_blog-MERN/client/src/store.js",["257"],"import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"./reducers\";\r\nimport reduxLogger from \"./middleware/reduxLogger\";\r\n\r\nconst initialState = {};\r\nconst middleware = [thunk, reduxLogger];\r\n\r\nlet store;\r\ntry {\r\n  store = createStore(\r\n    rootReducer,\r\n    // initialState,\r\n    compose(applyMiddleware(...middleware))\r\n  );\r\n} catch (error) {\r\n  store = createStore(\r\n    rootReducer,\r\n    // initialState,\r\n    compose(applyMiddleware(...middleware))\r\n  );\r\n}\r\nexport default store;\r\n","/Users/navneetkumar/Desktop/Full_stack_blog-MERN/client/src/styles.js",[],"/Users/navneetkumar/Desktop/Full_stack_blog-MERN/client/src/middleware/reduxLogger.js",[],"/Users/navneetkumar/Desktop/Full_stack_blog-MERN/client/src/components/Auth/Auth.js",["258","259","260"],"import React, { useState } from \"react\";\nimport {\n  Avatar,\n  Typography,\n  Paper,\n  Button,\n  Grid,\n  Container,\n  TextField,\n  Input,\n} from \"@material-ui/core\";\nimport Icon from \"./Icon\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport useStyles from \"./styles\";\nimport InputValue from \"./Input\";\nimport { GoogleLogin } from \"react-google-login\";\nimport { useDispatch } from \"react-redux\";\nimport { useNavigate } from \"react-router-dom\";\nimport { signUp, signIn } from \"../../actions/auth\";\n\nconst initialSate = {\n  firstName: \"\",\n  lastName: \"\",\n  email: \"\",\n  password: \"\",\n  confirmPassword: \"\",\n};\nconst Auth = () => {\n  const [showPassword, setShowPassword] = useState(false);\n  const [isSignup, setIsSignup] = useState(false);\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const state = null;\n  const [formData, setformData] = useState(initialSate);\n  const history = useNavigate();\n  //preShowPassword\n  const handleShowPassword = () => setShowPassword((show) => !show);\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    if (isSignup) {\n      dispatch(signUp(formData, history));\n    } else {\n      dispatch(signIn(formData, history));\n    }\n  };\n  const handleChange = (e) => {\n    setformData({ ...formData, [e.target.name]: e.target.value });\n  };\n\n  const switchMode = () => {\n    setIsSignup((data) => !data);\n    handleShowPassword(false);\n  };\n  const googleSuccess = async (res) => {\n    console.log(res, \"resresres\");\n    const result = res?.profileObj;\n    const token = res?.tokenId;\n    try {\n      dispatch({ type: \"AUTH\", data: { result, token } });\n      history(\"/\");\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const googleError = () => {\n    alert(\"Google Sign In was unsuccessful. Try again later\");\n  };\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <Paper className={classes.paper} elevation={3}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography variant=\"h5\">{isSignup ? \"Sign Up\" : \"Sign In\"}</Typography>\n        <form className={classes.form} onSubmit={handleSubmit}>\n          <Grid container spacing={2}>\n            {isSignup && (\n              <>\n                <InputValue\n                  name=\"firstName\"\n                  label=\"First Name\"\n                  handleChange={handleChange}\n                  autoFocus\n                  half\n                />\n                <InputValue\n                  name=\"lastName\"\n                  label=\"Last Name\"\n                  handleChange={handleChange}\n                  half\n                />\n              </>\n            )}\n            <InputValue\n              name=\"email\"\n              label=\"Email Address\"\n              handleChange={handleChange}\n              type=\"email\"\n            />\n            <InputValue\n              name=\"password\"\n              label=\"Password\"\n              handleChange={handleChange}\n              type={showPassword ? \"text\" : \"password\"}\n              handleShowPassword={handleShowPassword}\n            />\n            {isSignup && (\n              <InputValue\n                name=\"confirmPassword\"\n                label=\"Confirm Password\"\n                handleChange={handleChange}\n                type=\"password\"\n              />\n            )}\n          </Grid>\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n          >\n            {isSignup ? \"Sign Up\" : \"Sigin\"}\n          </Button>\n          <GoogleLogin\n            render={(renderProps) => (\n              <Button\n                className={classes.googleButton}\n                color=\"primary\"\n                fullWidth\n                onClick={renderProps.onClick}\n                disabled={renderProps.disabled}\n                startIcon={<Icon />}\n                variant=\"contained\"\n                // responsetype=\"code,token\"\n              >\n                Google Sign In\n              </Button>\n            )}\n            clientId=\"1081216725829-jhji5qrmssr0i3lb380c49l86hsukr94.apps.googleusercontent.com\"\n            buttonText=\"Login\"\n            cookiePolicy={\"single_host_origin\"}\n            onSuccess={googleSuccess}\n            onFailure={googleError}\n          />\n          <Grid container justify=\"flex-end\">\n            <Grid item>\n              <Button onClick={switchMode}>\n                {isSignup\n                  ? \"Already have account? Sign In\"\n                  : \"Don't have an account? Sign Up\"}\n              </Button>\n            </Grid>\n          </Grid>\n        </form>\n      </Paper>\n    </Container>\n  );\n};\n\nexport default Auth;\n","/Users/navneetkumar/Desktop/Full_stack_blog-MERN/client/src/components/Navbar/Navbar.js",["261"],"import React, { useState, useEffect } from \"react\";\nimport { AppBar, Avatar, Button, Toolbar, Typography } from \"@material-ui/core\";\nimport useStyles from \"./styles\";\nimport { Link } from \"react-router-dom\";\nimport memories from \"../../images/1.png\";\nimport memoriesText from \"../../images/memoriesText.png\";\n\nimport { useDispatch } from \"react-redux\";\nimport decode from \"jwt-decode\";\nimport { useNavigate, useLocation } from \"react-router-dom\";\nconst Navbar = () => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const [user, setUser] = useState(JSON.parse(localStorage.getItem(\"profile\")));\n  const history = useNavigate();\n  const location = useLocation();\n  useEffect(() => {\n    const token = user?.token;\n    //JWT...\n    if (token) {\n      const decodedToken = decode(token);\n      if (decodedToken.exp * 1000 < new Date().getTime()) logout();\n    }\n    //getting from localstorage\n    setUser(JSON.parse(localStorage.getItem(\"profile\")));\n  }, [location]);\n  const logout = () => {\n    dispatch({ type: \"LOGOUT\" });\n    history(\"/\");\n    setUser(null);\n  };\n  return (\n    <AppBar className={classes.appBar} position=\"static\" color=\"inherit\">\n      <Link to=\"/\" className={classes.brandContainer}>\n        <img src={memoriesText} alt=\"icon\" height=\"50\" align=\"center\" />\n        <img\n          src={memories}\n          alt=\"memories\"\n          height=\"80\"\n          style={{ paddingLeft: 30 }}\n          align=\"center\"\n        />\n      </Link>\n      <Toolbar className={classes.toolbar}>\n        {user ? (\n          <div className={classes.profile}>\n            <Avatar\n              className={classes.purple}\n              alt={user.result.name}\n              src={user.result.imageUrl}\n            >\n              {user.result.name.charAt(0)}\n            </Avatar>\n            <Typography className={classes.userName} variant=\"h6\">\n              {user.result.name}\n            </Typography>\n            <Button\n              variant=\"conatined\"\n              className={classes.logout}\n              color=\"secondary\"\n              onClick={logout}\n            >\n              Logout\n            </Button>\n          </div>\n        ) : (\n          <Button\n            component={Link}\n            to=\"/auth\"\n            variant=\"contained\"\n            color=\"primary\"\n          >\n            SIGN IN\n          </Button>\n        )}\n      </Toolbar>\n    </AppBar>\n  );\n};\n\nexport default Navbar;\n","/Users/navneetkumar/Desktop/Full_stack_blog-MERN/client/src/components/Home/Home.js",["262"],"import React, { useEffect, useState } from \"react\";\nimport { getPostsBySearch } from \"../../actions/posts\";\nimport useStyles from \"./styles\";\nimport {\n  Container,\n  Grid,\n  Grow,\n  Paper,\n  AppBar,\n  TextField,\n  Button,\n} from \"@material-ui/core\";\nimport Posts from \"../Posts/Posts\";\nimport Form from \"../Form/Form\";\nimport { useDispatch } from \"react-redux\";\nimport Pagination from \"../Pagination\";\nimport { useNavigate, useLocation } from \"react-router-dom\";\nimport ChipInput from \"material-ui-chip-input\";\n\nfunction useQuery() {\n  return new URLSearchParams(useLocation().search);\n}\nconst Home = () => {\n  const [currentId, setCurrentId] = useState(0);\n  const dispatch = useDispatch();\n  const classes = useStyles();\n  const query = useQuery();\n  const history = useNavigate();\n  const page = query.get(\"page\") || 1;\n  const searchQuery = query.get(\"searchQuery\");\n  const [search, setSearch] = useState(\"\");\n  const [tags, setTags] = useState([]);\n  //on search hitting enter\n  const handleKeyPress = (e) => {\n    if (e.keyCode === 13) {\n      //search post\n      searchPost();\n    }\n  };\n  //add and remove tag of search\n  const handleAdd = (tag) => setTags([...tags, tag]);\n  const handleDelete = (tagToDelete) =>\n    setTags(tags.filter((tag) => tag !== tagToDelete));\n  //search action\n  const searchPost = () => {\n    if (search.trim || tags) {\n      //search post\n      dispatch(getPostsBySearch({ search, tags: tags.join(\",\") }));\n      history(\n        `/posts/search?searchQuery=${search || \"none\"}&tags=${tags.join(\",\")}`\n      );\n    } else {\n      history(\"/\");\n    }\n  };\n  return (\n    <Grow in>\n      <Container maxWidth=\"xl\">\n        <Grid\n          container\n          justify=\"space-between\"\n          alignItems=\"stretch\"\n          spacing={3}\n          className={classes.gridContainer}\n        >\n          <Grid item xs={12} sm={6} md={9}>\n            <Posts setCurrentId={setCurrentId} />\n          </Grid>\n          <Grid item xs={12} sm={4} md={3}>\n            <AppBar\n              className={classes.appBarSearch}\n              position=\"static\"\n              color=\"inherit\"\n            >\n              <TextField\n                name=\"search\"\n                variant=\"outlined\"\n                label=\"Search Memories\"\n                fullWidth\n                onKeyPress={handleKeyPress}\n                value={search}\n                onChange={(e) => {\n                  setSearch(e.target.value);\n                }}\n              />\n              <ChipInput\n                style={{ margin: \"10px 0\" }}\n                value={tags}\n                onAdd={handleAdd}\n                onDelete={handleDelete}\n                label=\"Search Tags\"\n                variant=\"outlined\"\n              />\n              <Button\n                onClick={searchPost}\n                className={classes.searchButton}\n                color=\"primary\"\n                variant=\"contained\"\n              >\n                Search\n              </Button>\n            </AppBar>\n            <Form currentId={currentId} setCurrentId={setCurrentId} />\n            {!searchQuery && !tags.length && (\n              <Paper elevation={6} className={classes.pagination}>\n                <Pagination page={page} />\n              </Paper>\n            )}\n          </Grid>\n        </Grid>\n      </Container>\n    </Grow>\n  );\n};\n\nexport default Home;\n","/Users/navneetkumar/Desktop/Full_stack_blog-MERN/client/src/reducers/index.js",[],"/Users/navneetkumar/Desktop/Full_stack_blog-MERN/client/src/components/Auth/Icon.js",[],"/Users/navneetkumar/Desktop/Full_stack_blog-MERN/client/src/components/Auth/Input.js",[],"/Users/navneetkumar/Desktop/Full_stack_blog-MERN/client/src/components/Auth/styles.js",[],"/Users/navneetkumar/Desktop/Full_stack_blog-MERN/client/src/components/Home/styles.js",[],"/Users/navneetkumar/Desktop/Full_stack_blog-MERN/client/src/components/Navbar/styles.js",[],"/Users/navneetkumar/Desktop/Full_stack_blog-MERN/client/src/components/Posts/Posts.js",[],"/Users/navneetkumar/Desktop/Full_stack_blog-MERN/client/src/actions/posts.js",[],"/Users/navneetkumar/Desktop/Full_stack_blog-MERN/client/src/components/Form/Form.js",["263","264","265"],"import React, { useState, useEffect } from \"react\";\nimport useStyles from \"./styles\";\nimport { TextField, Button, Typography, Paper } from \"@material-ui/core\";\nimport FileBase from \"react-file-base64\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { createPost, updatePost } from \"../../actions/posts\";\nimport { useLocation, useNavigate } from \"react-router-dom\";\n\n//get the current post id for update\nconst Form = ({ currentId, setCurrentId }) => {\n  const [postData, setPostData] = useState({\n    title: \"\",\n    message: \"\",\n    tags: [],\n    selectedFile: \"\",\n  });\n  const [postI, setPostI] = useState([]);\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const location = useLocation();\n  const user = JSON.parse(localStorage.getItem(\"profile\"));\n  const history = useNavigate();\n\n  const post = useSelector((state) =>\n    currentId\n      ? state.posts.posts.find((message) => message._id === currentId)\n      : null\n  );\n  useEffect(() => {\n    // if (!post?.title) clear();\n    if (post) setPostData(post);\n  }, [post, currentId]);\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    if (currentId === 0) {\n      dispatch(createPost({ ...postData, name: user?.result?.name }, history));\n      clear();\n    } else {\n      dispatch(\n        updatePost(currentId, { ...postData, name: user?.result?.name })\n      );\n      clear();\n    }\n  };\n\n  const getFiles = (files) => {\n    setPostData({ ...postData, selectedFile: files.base64 });\n  };\n\n  const clear = () => {\n    setCurrentId(0);\n    setPostData({\n      title: \"\",\n      message: \"\",\n      tags: \"\",\n      selectedFile: \"\",\n    });\n  };\n  if (!user?.result?.name) {\n    return (\n      <paper className={classes.paper}>\n        <Typography variant=\"h6\" align=\"center\">\n          Please Sign In to create your own momories and like other's memories.\n        </Typography>\n      </paper>\n    );\n  }\n  return (\n    <Paper className={classes.paper} elevation={6}>\n      <form\n        autoComplete=\"off\"\n        noValidate\n        className={`${classes.root}${classes.form}`}\n        onSubmit={handleSubmit}\n      >\n        <Typography variant=\"h6\">\n          {currentId ? `Editing \"${post?.title}\"` : \"Creating a Memory\"}\n        </Typography>\n        <TextField\n          name=\"title\"\n          variant=\"outlined\"\n          label=\"Title\"\n          fullWidth\n          value={postData.title}\n          className={classes.fields}\n          onChange={(e) => setPostData({ ...postData, title: e.target.value })}\n        />\n        <TextField\n          name=\"message\"\n          variant=\"outlined\"\n          label=\"Message\"\n          fullWidth\n          multiline\n          rows={4}\n          className={[classes.fields, classes.space]}\n          value={postData.message}\n          onChange={(e) =>\n            setPostData({ ...postData, message: e.target.value })\n          }\n        />\n        <TextField\n          name=\"tags\"\n          variant=\"outlined\"\n          label=\"Tags\"\n          fullWidth\n          value={postData.tags}\n          className={classes.fields}\n          onChange={(e) =>\n            setPostData({ ...postData, tags: e.target.value?.split(\",\") })\n          }\n        />\n        <div className={classes.fileInput}>\n          <FileBase type=\"file\" multiple={false} onDone={getFiles.bind(this)} />\n        </div>\n        <Button\n          className={classes.buttonSubmit}\n          color=\"primary\"\n          variant=\"contained\"\n          size=\"large\"\n          type=\"submit\"\n          fullWidth\n        >\n          Submit\n        </Button>\n        <Button\n          color=\"secondary\"\n          variant=\"contained\"\n          size=\"small\"\n          onClick={clear}\n          fullWidth\n        >\n          Clear\n        </Button>\n      </form>\n    </Paper>\n  );\n};\nexport default Form;\n","/Users/navneetkumar/Desktop/Full_stack_blog-MERN/client/src/reducers/posts.js",["266"],"import {\n  FETCH_ALL,\n  CREATE,\n  UPDATE,\n  DELETE,\n  LIKE,\n  FETCH_BY_SEARCH,\n  START_LOADING,\n  END_LOADING,\n  FETCH_POST,\n  COMMENT,\n} from \"../constants/actionTypes\";\nexport default (state = { isLoading: true, posts: [] }, action) => {\n  switch (action.type) {\n    case START_LOADING:\n      return { ...state, isLoading: true };\n    case END_LOADING:\n      return { ...state, isLoading: false };\n    case FETCH_POST:\n      return { ...state, post: action.payload };\n    case DELETE:\n      return {\n        ...state,\n        posts: state.posts.filter((post) => post._id !== action.payload),\n      };\n    case UPDATE:\n      return {\n        ...state,\n        posts: state.posts.map((post) =>\n          post._id === action.payload._id ? action.payload : post\n        ),\n      };\n    case LIKE:\n      return {\n        ...state,\n        posts: state.posts.map((post) =>\n          post._id === action.payload._id ? action.payload : post\n        ),\n      };\n    case COMMENT:\n      return {\n        ...state,\n        posts: state.posts.map((post) => {\n          if (post._id === action.payload._id) return action.payload;\n          return post;\n        }),\n      };\n    case FETCH_ALL:\n      return {\n        ...state,\n        posts: action.payload.data,\n        currentPage: action.payload.currentPage,\n        numberOfPages: action.payload.numberOfPages,\n      };\n    case FETCH_BY_SEARCH:\n      return { ...state, posts: action.payload.data };\n    case CREATE:\n      return { ...state, posts: [...state.posts, action.payload] };\n    default:\n      return state;\n  }\n};\n","/Users/navneetkumar/Desktop/Full_stack_blog-MERN/client/src/reducers/auth.js",[],"/Users/navneetkumar/Desktop/Full_stack_blog-MERN/client/src/components/Form/styles.js",[],"/Users/navneetkumar/Desktop/Full_stack_blog-MERN/client/src/constants/actionTypes.js",[],"/Users/navneetkumar/Desktop/Full_stack_blog-MERN/client/src/api/index.js",["267"],"import axios from \"axios\";\nconst API = axios.create({ baseURL: \"http://localhost:1000\" });\nconst config = {\n  headers: {\n    \"Content-Type\": \"application/json\",\n  },\n};\n//for auth/ it is function used every request\n//it will send token to backend for verify //and getting BE middleware req.headers.Authorization\nAPI.interceptors.request.use((req) => {\n  if (localStorage.getItem(\"profile\")) {\n    req.headers.Authorization = `Bearer ${\n      JSON.parse(localStorage.getItem(\"profile\")).token\n    }`;\n  }\n  return req;\n});\nexport const fetchPosts = (page) => API.get(`/posts?page=${page}`);\nexport const fetchPostsBySearch = (searchQuery) =>\n  API.get(\n    `/posts/search?searchQuery=${searchQuery.search || \"none\"}&tags=${\n      searchQuery.tags\n    }`\n  );\nexport const createPost = (newPost) => API.post(\"/posts\", newPost);\nexport const updatePost = (id, updatedPost) =>\n  API.patch(`/posts/${id}`, updatedPost);\nexport const deletePost = (id) => API.delete(`/posts/${id}`);\nexport const likePost = (id) => API.patch(`/posts/${id}/likePost`);\nexport const fetchPost = (id) => API.get(`/posts/${id}`);\nexport const signIn = (FormData) => API.post(\"/user/signIn\", FormData);\nexport const signUp = (FormData) => API.post(\"/user/signUp\", FormData);\nexport const comment = (value, id) =>\n  API.post(`/posts/${id}/commentPost`, { value });\n","/Users/navneetkumar/Desktop/Full_stack_blog-MERN/client/src/components/Posts/styles.js",[],"/Users/navneetkumar/Desktop/Full_stack_blog-MERN/client/src/components/Posts/Post/Post.js",["268"],"import React, { useState } from 'react';\nimport useStyles from './styles';\nimport {\n  Card,\n  CardActions,\n  CardContent,\n  CardMedia,\n  Button,\n  Typography,\n  ButtonBase,\n} from '@material-ui/core';\nimport ThumbUpAltIcon from '@material-ui/icons/ThumbUpAlt';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\nimport moment from 'moment';\nimport { useDispatch } from 'react-redux';\nimport { useNavigate } from 'react-router-dom';\nimport ThumbUpAltOutlined from '@material-ui/icons/ThumbUpAltOutlined';\nimport { deletePost, likepost } from '../../../actions/posts';\n\nconst Post = ({ post, setCurrentId }) => {\n  const classes = useStyles();\n  const [likes, setLikes] = useState(post?.likes);\n  const dispatch = useDispatch();\n  const history = useNavigate();\n  // const location = useLocation();\n  const user = JSON.parse(localStorage.getItem('profile'));\n  const openPost = () => {\n    history(`/posts/${post._id}`);\n  };\n  const userId = user?.result?.googleId || user?.result?._id;\n  const toKnowIfLike = post.likes.find((like) => like === userId);\n  const handleLikes = async () => {\n    dispatch(likepost(post._id));\n    if (toKnowIfLike) {\n      setLikes(post.likes.filter((id) => id !== userId));\n    } else {\n      setLikes([...post.likes, userId]);\n    }\n  };\n  const Likes = () => {\n    if (likes.length > 0) {\n      return likes.find((like) => like === userId) ? (\n        <>\n          <ThumbUpAltIcon fontSize=\"small\" />\n          &nbsp;\n          {likes.length > 2\n            ? `You and ${likes.length - 1} others`\n            : `${likes.length} like${likes.length > 1 ? 's' : ''}`}\n        </>\n      ) : (\n        <>\n          <ThumbUpAltOutlined fontSize=\"small\" />\n          &nbsp;{likes.length} {likes.length === 1 ? 'Like' : 'Likes'}\n        </>\n      );\n    }\n\n    return (\n      <>\n        <ThumbUpAltOutlined fontSize=\"small\" />\n        &nbsp;Like\n      </>\n    );\n  };\n\n  return (\n    <Card className={classes.card} raised elevation={6}>\n      {/* <ButtonBase\n        component=\"span\"\n        name=\"test\"\n        className={classes.cardActions}\n        onClick={openPost}\n      > */}\n      <CardMedia\n        className={classes.media}\n        image={post.selectedFile}\n        title={post.title}\n        onClick={openPost}\n      />\n      <div className={classes.overlay}>\n        <Typography variant=\"h6\">{post.name}</Typography>\n        <Typography variant=\"body2\">\n          {moment(post.createdAt).fromNow()}\n        </Typography>\n      </div>\n      {(user?.result?.googleId === post?.creator ||\n        user?.result?._id === post?.creator) && (\n        <div className={classes.overlay2}>\n          <Button\n            style={{ color: 'white' }}\n            size=\"small\"\n            onClick={(e) => {\n              e.stopPropagation();\n              setCurrentId(post._id);\n            }}\n          >\n            <MoreHorizIcon fontSize=\"medium\" />\n          </Button>\n        </div>\n      )}\n      <div className={classes.details}>\n        <Typography variant=\"body2\" color=\"textSecondary\" component=\"h2\">\n          {post.tags.map((tag) => `#${tag} `)}\n        </Typography>\n      </div>\n      <Typography\n        className={classes.title}\n        variant=\"h5\"\n        component=\"h2\"\n        gutterBottom\n      >\n        {post.title}\n      </Typography>\n      <CardContent>\n        <Typography variant=\"body2\" color=\"textSecondary\" gutterBottom>\n          {post.message.split(' ').splice(0, 20).join(' ')}...\n        </Typography>\n      </CardContent>\n      {/* </ButtonBase> */}\n      <CardActions className={classes.cardActions}>\n        <Button\n          size=\"small\"\n          color=\"primary\"\n          disabled={!user?.result}\n          onClick={handleLikes}\n        >\n          {/* <ThumbUpAltIcon fontSize=\"small\" />\n          Like {likes} */}\n          <Likes />\n        </Button>\n        {(user?.result?.googleId === post?.creator ||\n          user?.result?._id === post?.creator) && (\n          <Button\n            size=\"small\"\n            color=\"primary\"\n            onClick={() => {\n              dispatch(deletePost(post._id));\n            }}\n          >\n            <DeleteIcon fontSize=\"small\" />\n            Delete\n          </Button>\n        )}\n      </CardActions>\n    </Card>\n  );\n};\nexport default Post;\n","/Users/navneetkumar/Desktop/Full_stack_blog-MERN/client/src/components/Posts/Post/styles.js",[],"/Users/navneetkumar/Desktop/Full_stack_blog-MERN/client/src/actions/auth.js",[],"/Users/navneetkumar/Desktop/Full_stack_blog-MERN/client/src/components/Pagination.jsx",[],"/Users/navneetkumar/Desktop/Full_stack_blog-MERN/client/src/components/styles.js",[],"/Users/navneetkumar/Desktop/Full_stack_blog-MERN/client/src/components/PostDetails/PostDetails.jsx",["269","270","271"],"import React, { useEffect } from \"react\";\nimport {\n  Paper,\n  Typography,\n  CircularProgress,\n  Divider,\n} from \"@material-ui/core\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport moment from \"moment\";\nimport { useParams, useNavigate } from \"react-router-dom\";\nimport useStyles from \"./styles\";\nimport { getPost, getPostsBySearch } from \"../../actions/posts\";\nimport CommentSection from \"./CommentSection\";\n\nconst PostDetails = () => {\n  const { post, posts, isLoading } = useSelector((state) => state.posts);\n  const dispatch = useDispatch();\n  const history = useNavigate();\n  const classes = useStyles();\n  const { id } = useParams();\n  useEffect(() => {\n    dispatch(getPost(id));\n  }, [id]);\n  //for  remcommended post\n  useEffect(() => {\n    if (post) {\n      dispatch(getPostsBySearch({ search: 'none', tags: post?.tags.join(',') }));\n\n    }\n  }, [post]);\n  // const recommendedPosts = posts.posts.filter(({_id})=> _id!==post._id);\n  //recommed data\n  const openPost = (_id) => history(`/posts/${_id}`);\n  if (!post) return null;\n  if (isLoading) {\n    return (\n      <Paper elevation={6} className={classes.loadingPaper}>\n        <CircularProgress size=\"7em\" />\n      </Paper>\n    );\n  }\n    const recommendedPosts = posts.filter(({ _id }) => _id !== post._id);\n\n  return (\n    <Paper style={{ padding: \"20px\", borderRadius: \"15px\" }} elevation={6}>\n      <div className={classes.card}>\n        <div className={classes.section}>\n          <Typography variant=\"h3\" component=\"h2\">\n            {post.title}\n          </Typography>\n          <Typography\n            gutterBottom\n            variant=\"h6\"\n            color=\"textSecondary\"\n            component=\"h2\"\n          >\n            {post.tags.map((tag) => `#${tag} `)}\n          </Typography>\n          <Typography gutterBottom variant=\"body1\" component=\"p\">\n            {post.message}\n          </Typography>\n          <Typography variant=\"h6\">Created by: {post.name}</Typography>\n          <Typography variant=\"body1\">\n            {moment(post.createdAt).fromNow()}\n          </Typography>\n          <Divider style={{ margin: \"20px 0\" }} />\n          <Typography variant=\"body1\">\n            <strong>Realtime Chat - coming soon!</strong>\n          </Typography>\n          <Divider style={{ margin: \"20px 0\" }} />\n          <CommentSection post={post}/>\n          <Divider style={{ margin: \"20px 0\" }} />\n        </div>\n        <div className={classes.imageSection}>\n          <img\n            className={classes.media}\n            src={\n              post.selectedFile ||\n              \"https://user-images.githubusercontent.com/194400/49531010-48dad180-f8b1-11e8-8d89-1e61320e1d82.png\"\n            }\n            alt={post.title}\n          />\n        </div>\n      </div>\n      {recommendedPosts.length > 0 && (\n        <div className={classes.section}>\n          <Typography gutterBottom variant=\"h5\">\n            You might also like:\n          </Typography>\n          <Divider />\n          <div className={classes.recommendedPosts}>\n            {recommendedPosts.map(\n              ({ title, message, name, likes, selectedFile, _id }) => (\n                <div\n                  style={{ margin: \"20px\", cursor: \"pointer\" }}\n                  onClick={() => openPost(_id)}\n                  key={_id}\n                >\n                  <Typography gutterBottom variant=\"h6\">\n                    {title}\n                  </Typography>\n                  <Typography gutterBottom variant=\"subtitle2\">\n                    {name}\n                  </Typography>\n                  <Typography gutterBottom variant=\"subtitle2\">\n                    {message}\n                  </Typography>\n                  {/* {likes.length>0( */}\n                  <Typography gutterBottom variant=\"subtitle2\">\n                    Likes:{likes.length}\n                  </Typography>\n                  {/* )} */}\n                  <img src={ selectedFile ||\n              \"https://user-images.githubusercontent.com/194400/49531010-48dad180-f8b1-11e8-8d89-1e61320e1d82.png\"} width=\"200\" height=\"150\" />\n                </div>\n              )\n            )}\n          </div>\n        </div>\n      )}\n    </Paper>\n  );\n};\n\nexport default PostDetails;\n","/Users/navneetkumar/Desktop/Full_stack_blog-MERN/client/src/components/PostDetails/styles.js",[],"/Users/navneetkumar/Desktop/Full_stack_blog-MERN/client/src/components/PostDetails/CommentSection.jsx",["272"],"import React, { useEffect, useRef, useState } from \"react\";\nimport { Typography, TextField, Button } from \"@material-ui/core\";\nimport { useDispatch } from \"react-redux\";\nimport useStyles from \"./styles\";\nimport {commentPost} from \"../../actions/posts\"\n\nconst CommentSection = ({ post }) => {\n  const classes = useStyles();\n  const [comments, setComments] = useState(post?.comments);\n  const [comment, setComment] = useState(\"\");\n  const commentsRef = useRef();\nconst user = JSON.parse(localStorage.getItem('profile'));\nconst dispatch =useDispatch()\n  const handleClick = async () => {\nconst finalComment = `${user.result.name}:${comment}`\nconst newComment = await dispatch(commentPost(finalComment, post._id))\nsetComments(newComment);\nsetComment('');\ncommentsRef.current.scrollIntoView({behavior:'smooth'})\n};\n  return (\n    <div>\n      <div className={classes.commentsOuterContainer}>\n        <div className={classes.commentsInnerContainer}>\n          <Typography gutterBottom variant=\"h6\">\n            Comments\n          </Typography>\n          {comments?.map((c, i) => (\n            <Typography key={i} gutterBottom variant=\"subtitle2\">\n              <strong>{c.split(':')[0]}</strong> {c.split(':')[1]}\n            </Typography>\n          ))}\n          <div ref={commentsRef}/>\n        </div>\n        {user?.result?.name &&(\n      <div style={{ width: \"70%\" }}>\n      <Typography variant=\"h6\" gutterBottom>\n        Write a Comment\n      </Typography>\n      <TextField\n        fullWidth\n        rows={4}\n        label=\"Comment\"\n        multiline\n        variant=\"outlined\"\n        value={comment}\n        onChange={(e) => setComment(e.target.value)}\n      />\n      <Button\n        style={{ marginTop: \"10px\" }}\n        fullWidth\n        disabled={!comment}\n        variant=\"contained\"\n        color=\"primary\"\n        onClick={handleClick}\n      >\n        comment\n      </Button>\n    </div>\n        )}\n      </div>\n    </div>\n  );\n};\nexport default CommentSection;\n",{"ruleId":"273","replacedBy":"274"},{"ruleId":"275","replacedBy":"276"},{"ruleId":"277","severity":1,"message":"278","line":3,"column":8,"nodeType":"279","messageId":"280","endLine":3,"endColumn":17},{"ruleId":"281","severity":1,"message":"282","line":8,"column":1,"nodeType":"283","endLine":27,"endColumn":3},{"ruleId":"277","severity":1,"message":"284","line":4,"column":7,"nodeType":"279","messageId":"280","endLine":4,"endColumn":13},{"ruleId":"277","severity":1,"message":"285","line":4,"column":21,"nodeType":"279","messageId":"280","endLine":4,"endColumn":31},{"ruleId":"277","severity":1,"message":"286","line":1,"column":17,"nodeType":"279","messageId":"280","endLine":1,"endColumn":26},{"ruleId":"277","severity":1,"message":"287","line":9,"column":3,"nodeType":"279","messageId":"280","endLine":9,"endColumn":12},{"ruleId":"277","severity":1,"message":"288","line":10,"column":3,"nodeType":"279","messageId":"280","endLine":10,"endColumn":8},{"ruleId":"277","severity":1,"message":"289","line":24,"column":9,"nodeType":"279","messageId":"280","endLine":24,"endColumn":14},{"ruleId":"277","severity":1,"message":"290","line":1,"column":16,"nodeType":"279","messageId":"280","endLine":1,"endColumn":22},{"ruleId":"273","replacedBy":"291"},{"ruleId":"275","replacedBy":"292"},{"ruleId":"277","severity":1,"message":"293","line":6,"column":7,"nodeType":"279","messageId":"280","endLine":6,"endColumn":19},{"ruleId":"277","severity":1,"message":"287","line":9,"column":3,"nodeType":"279","messageId":"280","endLine":9,"endColumn":12},{"ruleId":"277","severity":1,"message":"288","line":10,"column":3,"nodeType":"279","messageId":"280","endLine":10,"endColumn":8},{"ruleId":"277","severity":1,"message":"289","line":33,"column":9,"nodeType":"279","messageId":"280","endLine":33,"endColumn":14},{"ruleId":"294","severity":1,"message":"295","line":26,"column":6,"nodeType":"296","endLine":26,"endColumn":16,"suggestions":"297"},{"ruleId":"277","severity":1,"message":"286","line":1,"column":17,"nodeType":"279","messageId":"280","endLine":1,"endColumn":26},{"ruleId":"277","severity":1,"message":"298","line":17,"column":10,"nodeType":"279","messageId":"280","endLine":17,"endColumn":15},{"ruleId":"277","severity":1,"message":"299","line":17,"column":17,"nodeType":"279","messageId":"280","endLine":17,"endColumn":25},{"ruleId":"277","severity":1,"message":"300","line":20,"column":9,"nodeType":"279","messageId":"280","endLine":20,"endColumn":17},{"ruleId":"281","severity":1,"message":"282","line":13,"column":1,"nodeType":"283","endLine":62,"endColumn":3},{"ruleId":"277","severity":1,"message":"284","line":3,"column":7,"nodeType":"279","messageId":"280","endLine":3,"endColumn":13},{"ruleId":"277","severity":1,"message":"301","line":10,"column":3,"nodeType":"279","messageId":"280","endLine":10,"endColumn":13},{"ruleId":"294","severity":1,"message":"302","line":23,"column":6,"nodeType":"296","endLine":23,"endColumn":10,"suggestions":"303"},{"ruleId":"294","severity":1,"message":"302","line":30,"column":6,"nodeType":"296","endLine":30,"endColumn":12,"suggestions":"304"},{"ruleId":"305","severity":1,"message":"306","line":113,"column":19,"nodeType":"307","endLine":114,"endColumn":144},{"ruleId":"277","severity":1,"message":"286","line":1,"column":17,"nodeType":"279","messageId":"280","endLine":1,"endColumn":26},"no-native-reassign",["308"],"no-negated-in-lhs",["309"],"no-unused-vars","'useStyles' is defined but never used.","Identifier","unusedVar","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'config' is assigned a value but never used.","'Typography' is defined but never used.","'useEffect' is defined but never used.","'TextField' is defined but never used.","'Input' is defined but never used.","'state' is assigned a value but never used.","'LOGOUT' is defined but never used.",["308"],["309"],"'initialState' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'logout' and 'user?.token'. Either include them or remove the dependency array.","ArrayExpression",["310"],"'postI' is assigned a value but never used.","'setPostI' is assigned a value but never used.","'location' is assigned a value but never used.","'ButtonBase' is defined but never used.","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["311"],["312"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"313","fix":"314"},{"desc":"315","fix":"316"},{"desc":"317","fix":"318"},"Update the dependencies array to be: [location, logout, user?.token]",{"range":"319","text":"320"},"Update the dependencies array to be: [dispatch, id]",{"range":"321","text":"322"},"Update the dependencies array to be: [dispatch, post]",{"range":"323","text":"324"},[975,985],"[location, logout, user?.token]",[706,710],"[dispatch, id]",[870,876],"[dispatch, post]"]