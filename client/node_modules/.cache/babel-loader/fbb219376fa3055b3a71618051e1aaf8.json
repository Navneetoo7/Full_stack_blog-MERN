{"ast":null,"code":"import { FETCH_ALL, CREATE, UPDATE, DELETE, LIKE } from \"../constants/actionTypes\";\nimport * as api from \"../api\"; //action creators\n\nexport const getPosts = () => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.fetchPosts();\n    dispatch({\n      type: FETCH_ALL,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error.message);\n  }\n};\nexport const createPost = post => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.createPost(post);\n    dispatch({\n      type: CREATE,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const updatePost = (id, post) => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.updatePost(id, post);\n    dispatch({\n      type: UPDATE,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const deletePost = id => async dispatch => {\n  try {\n    await api.deletePost(id);\n    dispatch({\n      type: DELETE,\n      payload: id\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const likepost = id => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.likePost(id);\n    dispatch({\n      type: LIKE,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getPostsBySearch = searchQuery => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.fetchPostsBySearch(searchQuery);\n  } catch (error) {\n    console.log(error);\n  }\n};","map":{"version":3,"sources":["/Users/navneetkumar/Desktop/Full_stack_blog-MERN/client/src/actions/posts.js"],"names":["FETCH_ALL","CREATE","UPDATE","DELETE","LIKE","api","getPosts","dispatch","data","fetchPosts","type","payload","error","console","log","message","createPost","post","updatePost","id","deletePost","likepost","likePost","getPostsBySearch","searchQuery","fetchPostsBySearch"],"mappings":"AAAA,SACEA,SADF,EAEEC,MAFF,EAGEC,MAHF,EAIEC,MAJF,EAKEC,IALF,QAMO,0BANP;AAOA,OAAO,KAAKC,GAAZ,MAAqB,QAArB,C,CACA;;AACA,OAAO,MAAMC,QAAQ,GAAG,MAAM,MAAOC,QAAP,IAAoB;AAChD,MAAI;AACF,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMH,GAAG,CAACI,UAAJ,EAAvB;AACAF,IAAAA,QAAQ,CAAC;AAAEG,MAAAA,IAAI,EAAEV,SAAR;AAAmBW,MAAAA,OAAO,EAAEH;AAA5B,KAAD,CAAR;AACD,GAHD,CAGE,OAAOI,KAAP,EAAc;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,OAAlB;AACD;AACF,CAPM;AASP,OAAO,MAAMC,UAAU,GAAIC,IAAD,IAAU,MAAOV,QAAP,IAAoB;AACtD,MAAI;AACF,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMH,GAAG,CAACW,UAAJ,CAAeC,IAAf,CAAvB;AAEAV,IAAAA,QAAQ,CAAC;AAAEG,MAAAA,IAAI,EAAET,MAAR;AAAgBU,MAAAA,OAAO,EAAEH;AAAzB,KAAD,CAAR;AACD,GAJD,CAIE,OAAOI,KAAP,EAAc;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD;AACF,CARM;AASP,OAAO,MAAMM,UAAU,GAAG,CAACC,EAAD,EAAKF,IAAL,KAAc,MAAOV,QAAP,IAAoB;AAC1D,MAAI;AACF,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMH,GAAG,CAACa,UAAJ,CAAeC,EAAf,EAAmBF,IAAnB,CAAvB;AACAV,IAAAA,QAAQ,CAAC;AAAEG,MAAAA,IAAI,EAAER,MAAR;AAAgBS,MAAAA,OAAO,EAAEH;AAAzB,KAAD,CAAR;AACD,GAHD,CAGE,OAAOI,KAAP,EAAc;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD;AACF,CAPM;AAQP,OAAO,MAAMQ,UAAU,GAAID,EAAD,IAAQ,MAAOZ,QAAP,IAAoB;AACpD,MAAI;AACF,UAAMF,GAAG,CAACe,UAAJ,CAAeD,EAAf,CAAN;AACAZ,IAAAA,QAAQ,CAAC;AAAEG,MAAAA,IAAI,EAAEP,MAAR;AAAgBQ,MAAAA,OAAO,EAAEQ;AAAzB,KAAD,CAAR;AACD,GAHD,CAGE,OAAOP,KAAP,EAAc;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD;AACF,CAPM;AAQP,OAAO,MAAMS,QAAQ,GAAIF,EAAD,IAAQ,MAAOZ,QAAP,IAAoB;AAClD,MAAI;AACF,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMH,GAAG,CAACiB,QAAJ,CAAaH,EAAb,CAAvB;AACAZ,IAAAA,QAAQ,CAAC;AAAEG,MAAAA,IAAI,EAAEN,IAAR;AAAcO,MAAAA,OAAO,EAAEH;AAAvB,KAAD,CAAR;AACD,GAHD,CAGE,OAAOI,KAAP,EAAc;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD;AACF,CAPM;AAQP,OAAO,MAAMW,gBAAgB,GAAIC,WAAD,IAAiB,MAAOjB,QAAP,IAAoB;AACnE,MAAI;AACF,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMH,GAAG,CAACoB,kBAAJ,CAAuBD,WAAvB,CAAvB;AACD,GAFD,CAEE,OAAOZ,KAAP,EAAc;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACD;AACF,CANM","sourcesContent":["import {\n  FETCH_ALL,\n  CREATE,\n  UPDATE,\n  DELETE,\n  LIKE,\n} from \"../constants/actionTypes\";\nimport * as api from \"../api\";\n//action creators\nexport const getPosts = () => async (dispatch) => {\n  try {\n    const { data } = await api.fetchPosts();\n    dispatch({ type: FETCH_ALL, payload: data });\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\nexport const createPost = (post) => async (dispatch) => {\n  try {\n    const { data } = await api.createPost(post);\n\n    dispatch({ type: CREATE, payload: data });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const updatePost = (id, post) => async (dispatch) => {\n  try {\n    const { data } = await api.updatePost(id, post);\n    dispatch({ type: UPDATE, payload: data });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const deletePost = (id) => async (dispatch) => {\n  try {\n    await api.deletePost(id);\n    dispatch({ type: DELETE, payload: id });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const likepost = (id) => async (dispatch) => {\n  try {\n    const { data } = await api.likePost(id);\n    dispatch({ type: LIKE, payload: data });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getPostsBySearch = (searchQuery) => async (dispatch) => {\n  try {\n    const { data } = await api.fetchPostsBySearch(searchQuery);\n  } catch (error) {\n    console.log(error);\n  }\n};\n"]},"metadata":{},"sourceType":"module"}