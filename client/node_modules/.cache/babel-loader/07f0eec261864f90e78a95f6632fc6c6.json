{"ast":null,"code":"import axios from \"axios\";\nconst API = axios.create({\n  baseURL: \"http://localhost:1000\"\n});\nconst config = {\n  headers: {\n    \"Content-Type\": \"application/json\"\n  }\n}; //for auth/ it is function used every request\n//it will send token to backend for verify //and getting BE middleware req.headers.Authorization\n\nAPI.interceptors.request.use(req => {\n  if (localStorage.getItem(\"profile\")) {\n    req.headers.Authorization = `Bearer ${JSON.parse(localStorage.getItem(\"profile\")).token}`;\n  }\n\n  return req;\n});\nexport const fetchPosts = page => API.get(`/posts?page=${page}`);\nexport const fetchPostsBySearch = searchQuery => API.get(`/posts/search?searchQuery=${searchQuery.search || none}&tags=${searchQuery.tags}`);\nexport const createPost = newPost => API.post(\"/posts\", newPost);\nexport const updatePost = (id, updatedPost) => API.patch(`/posts/${id}`, updatedPost);\nexport const deletePost = id => API.delete(`/posts/${id}`);\nexport const likePost = id => API.patch(`/posts/${id}/likePost`);\nexport const fetchPost = id => API.get(`/posts/${id}`);\nexport const signIn = FormData => API.post(\"/user/signIn\", FormData);\nexport const signUp = FormData => API.post(\"/user/signUp\", FormData);","map":{"version":3,"sources":["/Users/navneetkumar/Desktop/Full_stack_blog-MERN/client/src/api/index.js"],"names":["axios","API","create","baseURL","config","headers","interceptors","request","use","req","localStorage","getItem","Authorization","JSON","parse","token","fetchPosts","page","get","fetchPostsBySearch","searchQuery","search","none","tags","createPost","newPost","post","updatePost","id","updatedPost","patch","deletePost","delete","likePost","fetchPost","signIn","FormData","signUp"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,MAAMC,GAAG,GAAGD,KAAK,CAACE,MAAN,CAAa;AAAEC,EAAAA,OAAO,EAAE;AAAX,CAAb,CAAZ;AACA,MAAMC,MAAM,GAAG;AACbC,EAAAA,OAAO,EAAE;AACP,oBAAgB;AADT;AADI,CAAf,C,CAKA;AACA;;AACAJ,GAAG,CAACK,YAAJ,CAAiBC,OAAjB,CAAyBC,GAAzB,CAA8BC,GAAD,IAAS;AACpC,MAAIC,YAAY,CAACC,OAAb,CAAqB,SAArB,CAAJ,EAAqC;AACnCF,IAAAA,GAAG,CAACJ,OAAJ,CAAYO,aAAZ,GAA6B,UAC3BC,IAAI,CAACC,KAAL,CAAWJ,YAAY,CAACC,OAAb,CAAqB,SAArB,CAAX,EAA4CI,KAC7C,EAFD;AAGD;;AACD,SAAON,GAAP;AACD,CAPD;AAQA,OAAO,MAAMO,UAAU,GAAIC,IAAD,IAAUhB,GAAG,CAACiB,GAAJ,CAAS,eAAcD,IAAK,EAA5B,CAA7B;AACP,OAAO,MAAME,kBAAkB,GAAIC,WAAD,IAChCnB,GAAG,CAACiB,GAAJ,CACG,6BAA4BE,WAAW,CAACC,MAAZ,IAAsBC,IAAK,SACtDF,WAAW,CAACG,IACb,EAHH,CADK;AAMP,OAAO,MAAMC,UAAU,GAAIC,OAAD,IAAaxB,GAAG,CAACyB,IAAJ,CAAS,QAAT,EAAmBD,OAAnB,CAAhC;AACP,OAAO,MAAME,UAAU,GAAG,CAACC,EAAD,EAAKC,WAAL,KACxB5B,GAAG,CAAC6B,KAAJ,CAAW,UAASF,EAAG,EAAvB,EAA0BC,WAA1B,CADK;AAEP,OAAO,MAAME,UAAU,GAAIH,EAAD,IAAQ3B,GAAG,CAAC+B,MAAJ,CAAY,UAASJ,EAAG,EAAxB,CAA3B;AACP,OAAO,MAAMK,QAAQ,GAAIL,EAAD,IAAQ3B,GAAG,CAAC6B,KAAJ,CAAW,UAASF,EAAG,WAAvB,CAAzB;AACP,OAAO,MAAMM,SAAS,GAAIN,EAAD,IAAQ3B,GAAG,CAACiB,GAAJ,CAAS,UAASU,EAAG,EAArB,CAA1B;AACP,OAAO,MAAMO,MAAM,GAAIC,QAAD,IAAcnC,GAAG,CAACyB,IAAJ,CAAS,cAAT,EAAyBU,QAAzB,CAA7B;AACP,OAAO,MAAMC,MAAM,GAAID,QAAD,IAAcnC,GAAG,CAACyB,IAAJ,CAAS,cAAT,EAAyBU,QAAzB,CAA7B","sourcesContent":["import axios from \"axios\";\nconst API = axios.create({ baseURL: \"http://localhost:1000\" });\nconst config = {\n  headers: {\n    \"Content-Type\": \"application/json\",\n  },\n};\n//for auth/ it is function used every request\n//it will send token to backend for verify //and getting BE middleware req.headers.Authorization\nAPI.interceptors.request.use((req) => {\n  if (localStorage.getItem(\"profile\")) {\n    req.headers.Authorization = `Bearer ${\n      JSON.parse(localStorage.getItem(\"profile\")).token\n    }`;\n  }\n  return req;\n});\nexport const fetchPosts = (page) => API.get(`/posts?page=${page}`);\nexport const fetchPostsBySearch = (searchQuery) =>\n  API.get(\n    `/posts/search?searchQuery=${searchQuery.search || none}&tags=${\n      searchQuery.tags\n    }`\n  );\nexport const createPost = (newPost) => API.post(\"/posts\", newPost);\nexport const updatePost = (id, updatedPost) =>\n  API.patch(`/posts/${id}`, updatedPost);\nexport const deletePost = (id) => API.delete(`/posts/${id}`);\nexport const likePost = (id) => API.patch(`/posts/${id}/likePost`);\nexport const fetchPost = (id) => API.get(`/posts/${id}`);\nexport const signIn = (FormData) => API.post(\"/user/signIn\", FormData);\nexport const signUp = (FormData) => API.post(\"/user/signUp\", FormData);\n"]},"metadata":{},"sourceType":"module"}