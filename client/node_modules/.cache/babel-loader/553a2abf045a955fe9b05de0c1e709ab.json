{"ast":null,"code":"var _jsxFileName = \"/Users/navneetkumar/Desktop/blog full stack/client/src/components/Form/Form.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport useStyles from \"./styles\";\nimport { TextField, Button, Typography, Paper } from \"@material-ui/core\";\nimport FileBase from \"react-file-base64\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { createPost, updatePost } from \"../../actions/posts\"; //get the current post id for update\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Form = ({\n  currentId,\n  setCurrentId\n}) => {\n  _s();\n\n  const [postData, setPostData] = useState({\n    creator: \"\",\n    title: \"\",\n    message: \"\",\n    tags: \"\",\n    selectedFile: \"\"\n  });\n  const [postI, setPostI] = useState([]);\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const post = useSelector(state => currentId ? state.posts.find(message => message._id === currentId) : null);\n  console.log(postData, \"hhjhjhjhjhjhjhj-----\", post);\n  useEffect(() => {\n    if (post) setPostData(post);\n  }, [post]);\n  console.log(\"postpostpostpost \", post);\n  useEffect(() => {}, [postI, dispatch]);\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n\n    if (currentId === 0) {\n      dispatch(createPost(postData));\n      clear();\n    } else {\n      dispatch(updatePost(currentId, postData));\n      clear();\n    }\n\n    await setPostI(dispatch(getPosts()));\n  };\n\n  const getFiles = files => {\n    setPostData({ ...postData,\n      selectedFile: files.base64\n    });\n  };\n\n  const clear = () => {\n    setCurrentId(0);\n    setPostData({\n      creator: \"\",\n      title: \"\",\n      message: \"\",\n      tags: \"\",\n      selectedFile: \"\"\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    className: classes.paper,\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      autoComplete: \"off\",\n      noValidate: true,\n      className: `${classes.root}${classes.form}`,\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h6\",\n        children: [currentId ? \"Editing\" : \"Creating\", \" a Memory\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"creator\",\n        variant: \"outlined\",\n        label: \"Creator\",\n        fullWidth: true,\n        value: postData.creator,\n        onChange: e => setPostData({ ...postData,\n          creator: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"title\",\n        variant: \"outlined\",\n        label: \"Title\",\n        fullWidth: true,\n        value: postData.title,\n        onChange: e => setPostData({ ...postData,\n          title: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"message\",\n        variant: \"outlined\",\n        label: \"Message\",\n        fullWidth: true,\n        value: postData.message,\n        onChange: e => setPostData({ ...postData,\n          message: e.target.value\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TextField, {\n        name: \"tags\",\n        variant: \"outlined\",\n        label: \"Tags\",\n        fullWidth: true,\n        value: postData.tags,\n        onChange: e => {\n          var _e$target$value;\n\n          return setPostData({ ...postData,\n            tags: (_e$target$value = e.target.value) === null || _e$target$value === void 0 ? void 0 : _e$target$value.split(\",\")\n          });\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.fileInput,\n        children: /*#__PURE__*/_jsxDEV(FileBase, {\n          type: \"file\",\n          multiple: false,\n          onDone: getFiles.bind(this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), console.log(postData), /*#__PURE__*/_jsxDEV(Button, {\n        className: classes.buttonSubmit,\n        color: \"primary\",\n        variant: \"contained\",\n        size: \"large\",\n        type: \"submit\",\n        fullWidth: true,\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        color: \"secondary\",\n        variant: \"contained\",\n        size: \"small\",\n        onClick: clear,\n        fullWidth: true,\n        children: \"Clear\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Form, \"XdrMxV3p+1OLGNFVnl7M4vaaSg4=\", false, function () {\n  return [useStyles, useDispatch, useSelector];\n});\n\n_c = Form;\nexport default Form;\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["/Users/navneetkumar/Desktop/blog full stack/client/src/components/Form/Form.js"],"names":["React","useState","useEffect","useStyles","TextField","Button","Typography","Paper","FileBase","useDispatch","useSelector","createPost","updatePost","Form","currentId","setCurrentId","postData","setPostData","creator","title","message","tags","selectedFile","postI","setPostI","classes","dispatch","post","state","posts","find","_id","console","log","handleSubmit","e","preventDefault","clear","getPosts","getFiles","files","base64","paper","root","form","target","value","split","fileInput","bind","buttonSubmit"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport useStyles from \"./styles\";\nimport { TextField, Button, Typography, Paper } from \"@material-ui/core\";\nimport FileBase from \"react-file-base64\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { createPost, updatePost } from \"../../actions/posts\";\n//get the current post id for update\nconst Form = ({ currentId, setCurrentId }) => {\n  const [postData, setPostData] = useState({\n    creator: \"\",\n    title: \"\",\n    message: \"\",\n    tags: \"\",\n    selectedFile: \"\",\n  });\n  const [postI, setPostI] = useState([]);\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  const post = useSelector((state) =>\n    currentId ? state.posts.find((message) => message._id === currentId) : null\n  );\n  console.log(postData, \"hhjhjhjhjhjhjhj-----\", post);\n  useEffect(() => {\n    if (post) setPostData(post);\n  }, [post]);\n  console.log(\"postpostpostpost \", post);\n  useEffect(() => {}, [postI, dispatch]);\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    if (currentId === 0) {\n      dispatch(createPost(postData));\n      clear();\n    } else {\n      dispatch(updatePost(currentId, postData));\n      clear();\n    }\n\n    await setPostI(dispatch(getPosts()));\n  };\n  const getFiles = (files) => {\n    setPostData({ ...postData, selectedFile: files.base64 });\n  };\n  const clear = () => {\n    setCurrentId(0);\n    setPostData({\n      creator: \"\",\n      title: \"\",\n      message: \"\",\n      tags: \"\",\n      selectedFile: \"\",\n    });\n  };\n\n  return (\n    <Paper className={classes.paper}>\n      <form\n        autoComplete=\"off\"\n        noValidate\n        className={`${classes.root}${classes.form}`}\n        onSubmit={handleSubmit}\n      >\n        <Typography variant=\"h6\">\n          {currentId ? \"Editing\" : \"Creating\"} a Memory\n        </Typography>\n        <TextField\n          name=\"creator\"\n          variant=\"outlined\"\n          label=\"Creator\"\n          fullWidth\n          value={postData.creator}\n          onChange={(e) =>\n            setPostData({ ...postData, creator: e.target.value })\n          }\n        />\n        <TextField\n          name=\"title\"\n          variant=\"outlined\"\n          label=\"Title\"\n          fullWidth\n          value={postData.title}\n          onChange={(e) => setPostData({ ...postData, title: e.target.value })}\n        />\n        <TextField\n          name=\"message\"\n          variant=\"outlined\"\n          label=\"Message\"\n          fullWidth\n          value={postData.message}\n          onChange={(e) =>\n            setPostData({ ...postData, message: e.target.value })\n          }\n        />\n        <TextField\n          name=\"tags\"\n          variant=\"outlined\"\n          label=\"Tags\"\n          fullWidth\n          value={postData.tags}\n          onChange={(e) =>\n            setPostData({ ...postData, tags: e.target.value?.split(\",\") })\n          }\n        />\n        <div className={classes.fileInput}>\n          <FileBase type=\"file\" multiple={false} onDone={getFiles.bind(this)} />\n        </div>\n        {console.log(postData)}\n        <Button\n          className={classes.buttonSubmit}\n          color=\"primary\"\n          variant=\"contained\"\n          size=\"large\"\n          type=\"submit\"\n          fullWidth\n        >\n          Submit\n        </Button>\n        <Button\n          color=\"secondary\"\n          variant=\"contained\"\n          size=\"small\"\n          onClick={clear}\n          fullWidth\n        >\n          Clear\n        </Button>\n      </form>\n    </Paper>\n  );\n};\nexport default Form;\n"]},"metadata":{},"sourceType":"module"}