{"ast":null,"code":"import { FETCH_ALL, CREATE, UPDATE, DELETE, LIKE, FETCH_BY_SEARCH } from \"../constants/actionTypes\";\nimport * as api from \"../api\"; //action creators\n\nexport const getPosts = page => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.fetchPosts(page);\n    dispatch({\n      type: FETCH_ALL,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error.message);\n  }\n};\nexport const createPost = post => async dispatch => {\n  try {\n    const {\n      data: {\n        data,\n        currentPage,\n        numberOfPages\n      }\n    } = await api.createPost(post);\n    dispatch({\n      type: CREATE,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const updatePost = (id, post) => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.updatePost(id, post);\n    dispatch({\n      type: UPDATE,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const deletePost = id => async dispatch => {\n  try {\n    await api.deletePost(id);\n    dispatch({\n      type: DELETE,\n      payload: id\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const likepost = id => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.likePost(id);\n    dispatch({\n      type: LIKE,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getPostsBySearch = searchQuery => async dispatch => {\n  try {\n    const {\n      data: {\n        data\n      }\n    } = await api.fetchPostsBySearch(searchQuery);\n    dispatch({\n      type: FETCH_BY_SEARCH,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};","map":{"version":3,"sources":["/Users/navneetkumar/Desktop/Full_stack_blog-MERN/client/src/actions/posts.js"],"names":["FETCH_ALL","CREATE","UPDATE","DELETE","LIKE","FETCH_BY_SEARCH","api","getPosts","page","dispatch","data","fetchPosts","type","payload","error","console","log","message","createPost","post","currentPage","numberOfPages","updatePost","id","deletePost","likepost","likePost","getPostsBySearch","searchQuery","fetchPostsBySearch"],"mappings":"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","sourcesContent":["import {\n  FETCH_ALL,\n  CREATE,\n  UPDATE,\n  DELETE,\n  LIKE,\n  FETCH_BY_SEARCH,\n} from \"../constants/actionTypes\";\nimport * as api from \"../api\";\n//action creators\nexport const getPosts = (page) => async (dispatch) => {\n  try {\n    const { data } = await api.fetchPosts(page);\n    dispatch({ type: FETCH_ALL, payload: data });\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\nexport const createPost = (post) => async (dispatch) => {\n  try {\n    const {\n      data: { data, currentPage, numberOfPages },\n    } = await api.createPost(post);\n\n    dispatch({ type: CREATE, payload: data });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const updatePost = (id, post) => async (dispatch) => {\n  try {\n    const { data } = await api.updatePost(id, post);\n    dispatch({ type: UPDATE, payload: data });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const deletePost = (id) => async (dispatch) => {\n  try {\n    await api.deletePost(id);\n    dispatch({ type: DELETE, payload: id });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const likepost = (id) => async (dispatch) => {\n  try {\n    const { data } = await api.likePost(id);\n    dispatch({ type: LIKE, payload: data });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getPostsBySearch = (searchQuery) => async (dispatch) => {\n  try {\n    const {\n      data: { data },\n    } = await api.fetchPostsBySearch(searchQuery);\n    dispatch({ type: FETCH_BY_SEARCH, payload: data });\n  } catch (error) {\n    console.log(error);\n  }\n};\n"]},"metadata":{},"sourceType":"module"}