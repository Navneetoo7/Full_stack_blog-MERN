{"ast":null,"code":"import { FETCH_ALL, CREATE, UPDATE, DELETE, LIKE, FETCH_BY_SEARCH, START_LOADING, END_LOADING, FETCH_POST } from \"../constants/actionTypes\";\nimport * as api from \"../api\"; //action creators\n\nexport const getPost = id => async dispatch => {\n  try {\n    dispatch({\n      type: START_LOADING\n    });\n    const {\n      data\n    } = await api.fetchPost(id);\n    dispatch({\n      type: FETCH_POST,\n      payload: data\n    });\n    dispatch({\n      type: END_LOADING\n    });\n  } catch (e) {\n    console.log(e);\n  }\n};\nexport const getPosts = page => async dispatch => {\n  try {\n    dispatch({\n      type: START_LOADING\n    });\n    const {\n      data\n    } = await api.fetchPosts(page);\n    dispatch({\n      type: FETCH_ALL,\n      payload: data\n    });\n    dispatch({\n      type: END_LOADING\n    });\n  } catch (error) {\n    console.log(error.message);\n  }\n};\nexport const createPost = post => async dispatch => {\n  try {\n    dispatch({\n      type: START_LOADING\n    });\n    const {\n      data\n    } = await api.createPost(post);\n    dispatch({\n      type: CREATE,\n      payload: data\n    });\n    dispatch({\n      type: END_LOADING\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const updatePost = (id, post) => async dispatch => {\n  try {\n    dispatch({\n      type: START_LOADING\n    });\n    const {\n      data\n    } = await api.updatePost(id, post);\n    dispatch({\n      type: UPDATE,\n      payload: data\n    });\n    dispatch({\n      type: END_LOADING\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const deletePost = id => async dispatch => {\n  try {\n    await api.deletePost(id);\n    dispatch({\n      type: DELETE,\n      payload: id\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const likepost = id => async dispatch => {\n  try {\n    const {\n      data\n    } = await api.likePost(id);\n    dispatch({\n      type: LIKE,\n      payload: data\n    });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getPostsBySearch = searchQuery => async dispatch => {\n  try {\n    dispatch({\n      type: START_LOADING\n    });\n    const {\n      data: {\n        data\n      }\n    } = await api.fetchPostsBySearch(searchQuery);\n    dispatch({\n      type: FETCH_BY_SEARCH,\n      payload: data\n    });\n    dispatch({\n      type: END_LOADING\n    });\n  } catch (error) {\n    console.log(error);\n    dispatch({\n      type: END_LOADING\n    });\n  }\n};","map":{"version":3,"sources":["/Users/navneetkumar/Desktop/Full_stack_blog-MERN/client/src/actions/posts.js"],"names":["FETCH_ALL","CREATE","UPDATE","DELETE","LIKE","FETCH_BY_SEARCH","START_LOADING","END_LOADING","FETCH_POST","api","getPost","id","dispatch","type","data","fetchPost","payload","e","console","log","getPosts","page","fetchPosts","error","message","createPost","post","updatePost","deletePost","likepost","likePost","getPostsBySearch","searchQuery","fetchPostsBySearch"],"mappings":"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","sourcesContent":["import {\n  FETCH_ALL,\n  CREATE,\n  UPDATE,\n  DELETE,\n  LIKE,\n  FETCH_BY_SEARCH,\n  START_LOADING,\n  END_LOADING,\n  FETCH_POST,\n} from \"../constants/actionTypes\";\nimport * as api from \"../api\";\n//action creators\n\nexport const getPost = (id) => async (dispatch) => {\n  try {\n    dispatch({ type: START_LOADING });\n    const { data } = await api.fetchPost(id);\n    dispatch({ type: FETCH_POST, payload: data });\n    dispatch({ type: END_LOADING });\n  } catch (e) {\n    console.log(e);\n  }\n};\nexport const getPosts = (page) => async (dispatch) => {\n  try {\n    dispatch({ type: START_LOADING });\n    const { data } = await api.fetchPosts(page);\n    dispatch({ type: FETCH_ALL, payload: data });\n    dispatch({ type: END_LOADING });\n  } catch (error) {\n    console.log(error.message);\n  }\n};\n\nexport const createPost = (post) => async (dispatch) => {\n  try {\n    dispatch({ type: START_LOADING });\n    const { data } = await api.createPost(post);\n\n    dispatch({ type: CREATE, payload: data });\n    dispatch({ type: END_LOADING });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const updatePost = (id, post) => async (dispatch) => {\n  try {\n    dispatch({ type: START_LOADING });\n    const { data } = await api.updatePost(id, post);\n    dispatch({ type: UPDATE, payload: data });\n    dispatch({ type: END_LOADING });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const deletePost = (id) => async (dispatch) => {\n  try {\n    await api.deletePost(id);\n    dispatch({ type: DELETE, payload: id });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const likepost = (id) => async (dispatch) => {\n  try {\n    const { data } = await api.likePost(id);\n    dispatch({ type: LIKE, payload: data });\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getPostsBySearch = (searchQuery) => async (dispatch) => {\n  try {\n    dispatch({ type: START_LOADING });\n    const {\n      data: { data },\n    } = await api.fetchPostsBySearch(searchQuery);\n    dispatch({ type: FETCH_BY_SEARCH, payload: data });\n    dispatch({ type: END_LOADING });\n  } catch (error) {\n    console.log(error);\n    dispatch({ type: END_LOADING });\n  }\n};\n"]},"metadata":{},"sourceType":"module"}