{"ast":null,"code":"var _jsxFileName = \"/Users/navneetkumar/Desktop/Full_stack_blog-MERN/client/src/components/Posts/Posts.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Grid, CircularProgress, Typography } from \"@material-ui/core\";\nimport Post from \"./Post/Post\";\nimport useStyles from \"./styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Posts = ({\n  setCurrentId\n}) => {\n  _s();\n\n  //[]-> {posts:[]}now\n  // let postsData = useSelector((state) => state.posts);\n  const {\n    posts,\n    isLoading\n  } = useSelector(state => state.posts);\n  const classes = useStyles();\n  useEffect(() => {\n    if (posts) {}\n  }, [posts]);\n  if (!posts.length && !isLoading) return \"No post\";\n  return isLoading ? /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(Grid, {\n    className: classes.container,\n    container: true,\n    alignItems: \"stretch\",\n    spacing: 3,\n    children: posts.map(post => /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      sm: 12,\n      md: 6,\n      lg: 3,\n      children: /*#__PURE__*/_jsxDEV(Post, {\n        post: post,\n        setCurrentId: setCurrentId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, this)\n    }, post._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Posts, \"+ETLilP+ENnWHruFQfTwlZwv48Q=\", false, function () {\n  return [useSelector, useStyles];\n});\n\n_c = Posts;\nexport default Posts;\n\nvar _c;\n\n$RefreshReg$(_c, \"Posts\");","map":{"version":3,"sources":["/Users/navneetkumar/Desktop/Full_stack_blog-MERN/client/src/components/Posts/Posts.js"],"names":["React","useEffect","useSelector","Grid","CircularProgress","Typography","Post","useStyles","Posts","setCurrentId","posts","isLoading","state","classes","length","container","map","post","_id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,IAAT,EAAeC,gBAAf,EAAiCC,UAAjC,QAAmD,mBAAnD;AACA,OAAOC,IAAP,MAAiB,aAAjB;AACA,OAAOC,SAAP,MAAsB,UAAtB;;;AACA,MAAMC,KAAK,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAsB;AAAA;;AAClC;AACA;AACA,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAuBT,WAAW,CAAEU,KAAD,IAAWA,KAAK,CAACF,KAAlB,CAAxC;AACA,QAAMG,OAAO,GAAGN,SAAS,EAAzB;AACAN,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIS,KAAJ,EAAW,CACV;AACF,GAHQ,EAGN,CAACA,KAAD,CAHM,CAAT;AAIA,MAAI,CAACA,KAAK,CAACI,MAAP,IAAiB,CAACH,SAAtB,EAAiC,OAAO,SAAP;AACjC,SAAOA,SAAS,gBACd,QAAC,gBAAD;AAAA;AAAA;AAAA;AAAA,UADc,gBAGd,QAAC,IAAD;AACE,IAAA,SAAS,EAAEE,OAAO,CAACE,SADrB;AAEE,IAAA,SAAS,MAFX;AAGE,IAAA,UAAU,EAAC,SAHb;AAIE,IAAA,OAAO,EAAE,CAJX;AAAA,cAMGL,KAAK,CAACM,GAAN,CAAWC,IAAD,iBACT,QAAC,IAAD;AAAqB,MAAA,IAAI,MAAzB;AAA0B,MAAA,EAAE,EAAE,EAA9B;AAAkC,MAAA,EAAE,EAAE,EAAtC;AAA0C,MAAA,EAAE,EAAE,CAA9C;AAAiD,MAAA,EAAE,EAAE,CAArD;AAAA,6BACE,QAAC,IAAD;AAAM,QAAA,IAAI,EAAEA,IAAZ;AAAkB,QAAA,YAAY,EAAER;AAAhC;AAAA;AAAA;AAAA;AAAA;AADF,OAAWQ,IAAI,CAACC,GAAhB;AAAA;AAAA;AAAA;AAAA,YADD;AANH;AAAA;AAAA;AAAA;AAAA,UAHF;AAgBD,CA1BD;;GAAMV,K;UAGyBN,W,EACbK,S;;;KAJZC,K;AA2BN,eAAeA,KAAf","sourcesContent":["import React, { useEffect } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { Grid, CircularProgress, Typography } from \"@material-ui/core\";\nimport Post from \"./Post/Post\";\nimport useStyles from \"./styles\";\nconst Posts = ({ setCurrentId }) => {\n  //[]-> {posts:[]}now\n  // let postsData = useSelector((state) => state.posts);\n  const { posts, isLoading } = useSelector((state) => state.posts);\n  const classes = useStyles();\n  useEffect(() => {\n    if (posts) {\n    }\n  }, [posts]);\n  if (!posts.length && !isLoading) return \"No post\";\n  return isLoading ? (\n    <CircularProgress />\n  ) : (\n    <Grid\n      className={classes.container}\n      container\n      alignItems=\"stretch\"\n      spacing={3}\n    >\n      {posts.map((post) => (\n        <Grid key={post._id} item xs={12} sm={12} md={6} lg={3}>\n          <Post post={post} setCurrentId={setCurrentId} />\n        </Grid>\n      ))}\n    </Grid>\n  );\n};\nexport default Posts;\n"]},"metadata":{},"sourceType":"module"}