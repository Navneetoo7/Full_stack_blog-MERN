{"ast":null,"code":"import { FETCH_ALL, CREATE, UPDATE, DELETE, LIKE, FETCH_BY_SEARCH } from \"../constants/actionTypes\";\nexport default ((posts = [], action) => {\n  switch (action.type) {\n    case DELETE:\n      return posts.filter(post => post._id !== action.payload);\n\n    case UPDATE:\n      return posts.map(post => post._id === action.payload._id ? action.payload : post);\n\n    case LIKE:\n      return posts.map(post => post._id === action.payload._id ? action.payload : post);\n\n    case FETCH_ALL:\n      return action.payload;\n\n    case FETCH_BY_SEARCH:\n      return action.payload;\n\n    case CREATE:\n      return [...posts, action.payload];\n\n    default:\n      return posts;\n  }\n});","map":{"version":3,"sources":["/Users/navneetkumar/Desktop/Full_stack_blog-MERN/client/src/reducers/posts.js"],"names":["FETCH_ALL","CREATE","UPDATE","DELETE","LIKE","FETCH_BY_SEARCH","posts","action","type","filter","post","_id","payload","map"],"mappings":"AAAA,SACEA,SADF,EAEEC,MAFF,EAGEC,MAHF,EAIEC,MAJF,EAKEC,IALF,EAMEC,eANF,QAOO,0BAPP;AAQA,gBAAe,CAACC,KAAK,GAAG,EAAT,EAAaC,MAAb,KAAwB;AACrC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKL,MAAL;AACE,aAAOG,KAAK,CAACG,MAAN,CAAcC,IAAD,IAAUA,IAAI,CAACC,GAAL,KAAaJ,MAAM,CAACK,OAA3C,CAAP;;AACF,SAAKV,MAAL;AACE,aAAOI,KAAK,CAACO,GAAN,CAAWH,IAAD,IACfA,IAAI,CAACC,GAAL,KAAaJ,MAAM,CAACK,OAAP,CAAeD,GAA5B,GAAkCJ,MAAM,CAACK,OAAzC,GAAmDF,IAD9C,CAAP;;AAGF,SAAKN,IAAL;AACE,aAAOE,KAAK,CAACO,GAAN,CAAWH,IAAD,IACfA,IAAI,CAACC,GAAL,KAAaJ,MAAM,CAACK,OAAP,CAAeD,GAA5B,GAAkCJ,MAAM,CAACK,OAAzC,GAAmDF,IAD9C,CAAP;;AAGF,SAAKV,SAAL;AACE,aAAOO,MAAM,CAACK,OAAd;;AACF,SAAKP,eAAL;AACE,aAAOE,MAAM,CAACK,OAAd;;AACF,SAAKX,MAAL;AACE,aAAO,CAAC,GAAGK,KAAJ,EAAWC,MAAM,CAACK,OAAlB,CAAP;;AACF;AACE,aAAON,KAAP;AAlBJ;AAoBD,CArBD","sourcesContent":["import {\n  FETCH_ALL,\n  CREATE,\n  UPDATE,\n  DELETE,\n  LIKE,\n  FETCH_BY_SEARCH,\n} from \"../constants/actionTypes\";\nexport default (posts = [], action) => {\n  switch (action.type) {\n    case DELETE:\n      return posts.filter((post) => post._id !== action.payload);\n    case UPDATE:\n      return posts.map((post) =>\n        post._id === action.payload._id ? action.payload : post\n      );\n    case LIKE:\n      return posts.map((post) =>\n        post._id === action.payload._id ? action.payload : post\n      );\n    case FETCH_ALL:\n      return action.payload;\n    case FETCH_BY_SEARCH:\n      return action.payload;\n    case CREATE:\n      return [...posts, action.payload];\n    default:\n      return posts;\n  }\n};\n"]},"metadata":{},"sourceType":"module"}