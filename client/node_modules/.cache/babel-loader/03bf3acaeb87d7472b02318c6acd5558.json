{"ast":null,"code":"var _jsxFileName = \"/Users/navneetkumar/Desktop/Full_stack_blog-MERN/client/src/components/Auth/Auth.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { Avatar, Typography, Paper, Button, Grid, Container, TextField, Input } from \"@material-ui/core\";\nimport Icon from \"./Icon\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport useStyles from \"./styles\";\nimport InputValue from \"./Input\";\nimport { GoogleLogin } from \"react-google-login\";\nimport { useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Auth = () => {\n  _s();\n\n  const [showPassword, setShowPassword] = useState(false);\n  const [isSignup, setIsSignup] = useState(false);\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const state = null;\n  const history = useNavigate(); //preShowPassword\n\n  const handleShowPassword = () => setShowPassword(show => !show);\n\n  const handleSubmit = () => {};\n\n  const handleChange = () => {};\n\n  const switchMode = () => {\n    setIsSignup(data => !data);\n    handleShowPassword(false);\n  };\n\n  const googleSuccess = async res => {\n    console.log(res, \"resresres\");\n    const result = res === null || res === void 0 ? void 0 : res.profileObj;\n    const token = res === null || res === void 0 ? void 0 : res.tokenId;\n\n    try {\n      dispatch({\n        type: \"AUTH\",\n        data: {\n          result,\n          token\n        }\n      });\n      history.push(\"/\");\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const googleError = () => {\n    alert(\"Google Sign In was unsuccessful. Try again later\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    component: \"main\",\n    maxWidth: \"xs\",\n    children: /*#__PURE__*/_jsxDEV(Paper, {\n      className: classes.paper,\n      elevation: 3,\n      children: [/*#__PURE__*/_jsxDEV(Avatar, {\n        className: classes.avatar,\n        children: /*#__PURE__*/_jsxDEV(LockOutlinedIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        children: isSignup ? \"Sign Up\" : \"Sign In\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        className: classes.form,\n        onSubmit: handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 2,\n          children: [isSignup && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(InputValue, {\n              name: \"firstName\",\n              label: \"First Name\",\n              handleChange: handleChange,\n              autoFocus: true,\n              half: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(InputValue, {\n              name: \"lastName\",\n              label: \"Last Name\",\n              handleChange: handleChange,\n              half: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true), /*#__PURE__*/_jsxDEV(InputValue, {\n            name: \"email\",\n            label: \"Email Address\",\n            handleChange: handleChange,\n            type: \"email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(InputValue, {\n            name: \"password\",\n            label: \"Password\",\n            handleChange: handleChange,\n            type: showPassword ? \"text\" : \"password\",\n            handleShowPassword: handleShowPassword\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this), isSignup && /*#__PURE__*/_jsxDEV(InputValue, {\n            name: \"confirmPassword\",\n            label: \"Confirm Password\",\n            handleChange: handleChange,\n            type: \"password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          fullWidth: true,\n          variant: \"contained\",\n          color: \"primary\",\n          className: classes.submit,\n          children: isSignup ? \"Sign Up\" : \"Sigin\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(GoogleLogin, {\n          render: renderProps => /*#__PURE__*/_jsxDEV(Button, {\n            className: classes.googleButton,\n            color: \"primary\",\n            fullWidth: true,\n            onClick: renderProps.onClick,\n            disabled: renderProps.disabled,\n            startIcon: /*#__PURE__*/_jsxDEV(Icon, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 28\n            }, this),\n            variant: \"contained\" // responsetype=\"code,token\"\n            ,\n            children: \"Google Sign In\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 15\n          }, this),\n          clientId: \"1081216725829-jhji5qrmssr0i3lb380c49l86hsukr94.apps.googleusercontent.com\",\n          buttonText: \"Login\",\n          cookiePolicy: \"single_host_origin\",\n          onSuccess: googleSuccess,\n          onFailure: googleError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          justify: \"flex-end\",\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              onClick: switchMode,\n              children: isSignup ? \"Already have account? Sign In\" : \"Don't have an account? Sign Up\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Auth, \"LDr+jZcAKQGxPP6t0hSjMaTWVhA=\", true, function () {\n  return [useStyles, useDispatch];\n});\n\n_c = Auth;\nexport default Auth;\n\nvar _c;\n\n$RefreshReg$(_c, \"Auth\");","map":{"version":3,"sources":["/Users/navneetkumar/Desktop/Full_stack_blog-MERN/client/src/components/Auth/Auth.js"],"names":["React","useEffect","useState","Avatar","Typography","Paper","Button","Grid","Container","TextField","Input","Icon","LockOutlinedIcon","useStyles","InputValue","GoogleLogin","useDispatch","useHistory","Auth","showPassword","setShowPassword","isSignup","setIsSignup","classes","dispatch","state","history","useNavigate","handleShowPassword","show","handleSubmit","handleChange","switchMode","data","googleSuccess","res","console","log","result","profileObj","token","tokenId","type","push","error","googleError","alert","paper","avatar","form","submit","renderProps","googleButton","onClick","disabled"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport {\n  Avatar,\n  Typography,\n  Paper,\n  Button,\n  Grid,\n  Container,\n  TextField,\n  Input,\n} from \"@material-ui/core\";\nimport Icon from \"./Icon\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport useStyles from \"./styles\";\nimport InputValue from \"./Input\";\nimport { GoogleLogin } from \"react-google-login\";\nimport { useDispatch } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\n\nconst Auth = () => {\n  const [showPassword, setShowPassword] = useState(false);\n  const [isSignup, setIsSignup] = useState(false);\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const state = null;\n  const history = useNavigate();\n  //preShowPassword\n  const handleShowPassword = () => setShowPassword((show) => !show);\n  const handleSubmit = () => {};\n  const handleChange = () => {};\n  const switchMode = () => {\n    setIsSignup((data) => !data);\n    handleShowPassword(false);\n  };\n  const googleSuccess = async (res) => {\n    console.log(res, \"resresres\");\n    const result = res?.profileObj;\n    const token = res?.tokenId;\n    try {\n      dispatch({ type: \"AUTH\", data: { result, token } });\n      history.push(\"/\");\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  const googleError = () => {\n    alert(\"Google Sign In was unsuccessful. Try again later\");\n  };\n\n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <Paper className={classes.paper} elevation={3}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <Typography variant=\"h5\">{isSignup ? \"Sign Up\" : \"Sign In\"}</Typography>\n        <form className={classes.form} onSubmit={handleSubmit}>\n          <Grid container spacing={2}>\n            {isSignup && (\n              <>\n                <InputValue\n                  name=\"firstName\"\n                  label=\"First Name\"\n                  handleChange={handleChange}\n                  autoFocus\n                  half\n                />\n                <InputValue\n                  name=\"lastName\"\n                  label=\"Last Name\"\n                  handleChange={handleChange}\n                  half\n                />\n              </>\n            )}\n            <InputValue\n              name=\"email\"\n              label=\"Email Address\"\n              handleChange={handleChange}\n              type=\"email\"\n            />\n            <InputValue\n              name=\"password\"\n              label=\"Password\"\n              handleChange={handleChange}\n              type={showPassword ? \"text\" : \"password\"}\n              handleShowPassword={handleShowPassword}\n            />\n            {isSignup && (\n              <InputValue\n                name=\"confirmPassword\"\n                label=\"Confirm Password\"\n                handleChange={handleChange}\n                type=\"password\"\n              />\n            )}\n          </Grid>\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n          >\n            {isSignup ? \"Sign Up\" : \"Sigin\"}\n          </Button>\n          <GoogleLogin\n            render={(renderProps) => (\n              <Button\n                className={classes.googleButton}\n                color=\"primary\"\n                fullWidth\n                onClick={renderProps.onClick}\n                disabled={renderProps.disabled}\n                startIcon={<Icon />}\n                variant=\"contained\"\n                // responsetype=\"code,token\"\n              >\n                Google Sign In\n              </Button>\n            )}\n            clientId=\"1081216725829-jhji5qrmssr0i3lb380c49l86hsukr94.apps.googleusercontent.com\"\n            buttonText=\"Login\"\n            cookiePolicy={\"single_host_origin\"}\n            onSuccess={googleSuccess}\n            onFailure={googleError}\n          />\n          <Grid container justify=\"flex-end\">\n            <Grid item>\n              <Button onClick={switchMode}>\n                {isSignup\n                  ? \"Already have account? Sign In\"\n                  : \"Don't have an account? Sign Up\"}\n              </Button>\n            </Grid>\n          </Grid>\n        </form>\n      </Paper>\n    </Container>\n  );\n};\n\nexport default Auth;\n"]},"metadata":{},"sourceType":"module"}